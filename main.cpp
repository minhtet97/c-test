/*
 /*※試験時間は90分です。
 試験中にわからないこと(関数名やinclude名など)があれば、
 ネットや本で調べてもらって構いません。
 問題の意図が理解できない場合は先生に質問してもらって構いません。
 他の生徒と会話することや、解答を見せてもらうことは禁止です。
 試験時間80分を経過した時点で、gitにて提出を始めてください。
 それまでは問題を解くか、別の作業をしてもかまいませんが、
 試験時間80分未満での提出はできません。
 第１問(一問2点)
 以下の計算に2進数で答えよ。
 
 第1
00101100 + 01010101 = 10000001
10110000 + 00001111 = 10111111

第2
00101100 + 01010101 = 129
10110000 + 00001111 = 191
第3
char : 1 byte
int : 2 また 4 bytes
float　：4 byte
double　：8 byte

第4
char * : 8 bytes
int * : 8 bytes
float *  : 8 bytes
double * : 8 bytes

第5
3 です。

第6
 
 第６問(25点)
 数値を2つ入力し、
 1番目に入力された値が奇数なら足し算、
 1番目に入力された値が偶数なら引き算を行うプログラムを作成せよ。
 結果)
 1 // 1番目に入力された値
 5 // 2番目に入力された値
 6 // 1番目が奇数なので足し算
 4 // 1番目に入力された値
 3 // 2番目に入力された値
 1 // 1番目が偶数なので引き算

 
 第７問(25点)
 第６問のプログラムをループで行うようにし、
 endと入力された場合終了するようにしてください。
 endの入力は1番目の値の場所でも、2番目の値の場所でも、
 別途endの入力を受け付けるようでもどれでもいいです。
 どこか一か所でendと入力して終了していれば正解とします。
int main()
{
    int K, E;
    printf("Get K , E \n");
    scanf("%d\n",&K);
    scanf("%d\n",&E);
   if (K % 2 == 0)
   {
       printf(" K + E = %d ", K+B);
   }else
   {
       printf(" K - E = %d ", K-E);
   }
}
 
 /*第８問(10点)
 以下のプログラムをエラーを解決し、コンパイルエラーがない状態にし、
 実行できるようにしてください。
 解答がエラー個所をコメントアウトして実行できるようにするのはNGです。
 (途中確認のためにコメントアウトをする分はOKです。)
 間違えている個所は4か所です。

 private red
 {
     public:
         red() { Clear(); }

         void Clear()
         {
             x = 0;
             y = 0;
             z = 0;
         }
     public:
         int x, y, z;
 };

 void main(){
     Point red;
     Point nextred;

     nextred.x = 100;
     nextred.y = 30;

     while (1)
     {
         if (red.x < nextred.x)
         {
             red.x++;
         }
         else if (red.x > nextred.x)
         {
             red.x--;
         }

         if (point.y < nextred.y)
         {
             red.y++;
         }
         else if (red.y > nextred.y)
         {
             red.y--;
         }
         printf("redX = %d\n", red.x);
         printf("redY = %d\n", red.y);

         if (red.x == nextred.x &&
             red.y == nextred.y)
         {
             break;
         }
     }
 }
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 */
